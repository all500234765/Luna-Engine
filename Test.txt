int a;
std::string b;
Custom c;

int abba;
std::string bOris;
Custom cUm;

d = a;
c += d;
g;

cbuffer EntityRenderData : register(b0) {
    uint  mCount;
    uint  mIndex;
    uint2 padding;
};

Texture2DArray<float4> _AnimatedSprite : register(t0);
SamplerState _Sampler                  : register(s0);

struct PS {
    float4 Position : SV_Position0;
    float2 Texcoord : TEXCOORD0;
};

float4 main(PS In): SV_Target0 {
    float4 Out = _AnimatedSprite.Sample(_Sampler, float3(In.Texcoord, mIndex % mCount));

    [flatten] if( Out.a <= .01f ) discard;
    return Out;
}
